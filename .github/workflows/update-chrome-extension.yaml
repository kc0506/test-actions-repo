name: Update Chrome Extension

on:
  push:
    branches:
      - extension

jobs:
  get-and-validate-version:
    # We ignore the case of initial commit or no manifest.json in this job :P

    env:
      MANIFEST: "./manifest.json"
      GET-VERSION: ""
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - id: next-version
        uses: ./.github/actions/get-extension-version
        with:
          manifest: ${{ env.MANIFEST }}

      # ! This may crash if action is modified? ðŸ™ƒ
      - run: git checkout HEAD^
      - id: prev-version
        uses: ./.github/actions/get-extension-version
        with:
          manifest: ${{ env.MANIFEST }}

      - if: ${{ steps.next-version.outputs.version == steps.prev-version.outputs.version }}
        uses: actions/github-script@v7
        env: 
          VERSION: ${{ steps.next-version.outputs.version }}
        with:
          script: |
              core.setFailed('Version ${{ env.VERSION }} already released.')    
    outputs: 
      version: ${{ steps.next-version.outputs.version }}

  create-tag-and-release:
    needs: get-and-validate-version
    permissions: 
      contents:
        write
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        # Ignore duplicate tag
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          VERSION: ${{ needs.get-and-validate-version.outputs.version }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
